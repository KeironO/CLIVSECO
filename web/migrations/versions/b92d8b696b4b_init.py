"""'Init'

Revision ID: b92d8b696b4b
Revises: 
Create Date: 2022-02-07 12:33:13.041806

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "b92d8b696b4b"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "note",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("dal_id", sa.String(length=128), nullable=True),
        sa.Column("clinical_finding", sa.String(length=2048), nullable=True),
        sa.Column("presenting_complaint", sa.String(length=2048), nullable=True),
        sa.Column("treatment_narrative", sa.String(length=8096), nullable=True),
        sa.Column("discharge_diagnosis_1", sa.String(length=1024), nullable=True),
        sa.Column("discharge_diagnosis_2", sa.String(length=1024), nullable=True),
        sa.Column("allergy", sa.String(length=2048), nullable=True),
        sa.Column("checked", sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "user_account",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("email", sa.String(length=320), nullable=False),
        sa.Column("password_hash", sa.String(length=256), nullable=False),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
    )
    op.create_table(
        "note_code",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("code", sa.String(length=7), nullable=False),
        sa.Column("note_id", sa.Integer(), nullable=False),
        sa.Column("type", sa.Enum("PROC", "DIAG", name="codetype"), nullable=False),
        sa.Column("by", sa.Enum("CODER", "AUTO", name="codedby"), nullable=False),
        sa.Column(
            "cfrom",
            sa.Enum("CLI", "PRE", "TRE", "DIA", "ALL", name="codefrom"),
            nullable=True,
        ),
        sa.Column("start", sa.Integer(), nullable=True),
        sa.Column("end", sa.Integer(), nullable=True),
        sa.Column(
            "created_on",
            sa.DateTime(),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.ForeignKeyConstraint(
            ["note_id"],
            ["note.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "note_confirmation",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("note_code_id", sa.Integer(), nullable=False),
        sa.Column("is_correct", sa.Boolean(), nullable=True),
        sa.Column("comments", sa.String(length=2048), nullable=True),
        sa.Column("replace_with", sa.String(length=7), nullable=True),
        sa.Column(
            "created_on",
            sa.DateTime(),
            server_default=sa.text("(CURRENT_TIMESTAMP)"),
            nullable=False,
        ),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["note_code_id"],
            ["note_code.id"],
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["user_account.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("note_confirmation")
    op.drop_table("note_code")
    op.drop_table("user_account")
    op.drop_table("note")
    # ### end Alembic commands ###
